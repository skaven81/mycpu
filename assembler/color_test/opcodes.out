
[0x00] NOP
x 0 IncrementPC 
x 1 NextInstruction

[0x01] CALL @addr
x 0 IncrementPC
# PC now points to high byte of subroutine address;
# Write high byte to TAL (TAL can present to data bus)
x 1 AddrBusPC WriteTAL IncrementPC
# PC now points to low byte of subroute address;
# Write low byte to TD
x 2 AddrBusPC WriteTD IncrementPC IncrementSP
# PC now points to next instruction address;
# Write low byte to stack
x 3 AddrBusSP DataBusPCL WriteRAM IncrementSP
# Write high byte to stack
x 4 AddrBusSP DataBusPCH WriteRAM
# Load next instruction address from TAL & TD
x 5 DataBusTAL WritePCH
x 6 DataBusTD WritePCL
x 7 NextInstruction

[0x02] RET
x 0 AddrBusSP WritePCH DecrementSP
x 1 AddrBusSP WritePCL DecrementSP
x 2 NextInstruction

[0xee] IRQ
# PC is still pointing at our return address, as
# the 0xee op was forced in instead of the intended
# next instruction.
x 0 MaskInterrupts IncrementSP
# Write low byte of PC to stack
x 1 AddrBusSP DataBusPCL WriteRAM IncrementSP
# Write high byte of PC to stack
x 2 AddrBusSP DataBusPCH WriteRAM
# Load next instruction from constants
x 3 DataBusZero WritePCL
x 4 DataBusIRQ WritePCH
# Jump to the IRQ vector
x 5 NextInstruction

[0x03] RETI
x 0 AddrBusSP WritePCH DecrementSP UnmaskInterrupts
x 1 AddrBusSP WritePCL DecrementSP RestoreStatusFlags WriteStatus
x 2 NextInstruction

[0x04] MASKINT
x 0 IncrementPC MaskInterrupts
x 1 NextInstruction

[0x05] UMASKINT
x 0 IncrementPC UnmaskInterrupts
x 1 NextInstruction

[0x06] PERIPH_AH
x 0 IncrementPC DataBusPeripheral WriteAH
x 1 NextInstruction

[0x07] PERIPH_BH
x 0 IncrementPC DataBusPeripheral WriteBH
x 1 NextInstruction

[0x08] PERIPH_CH
x 0 IncrementPC DataBusPeripheral WriteCH
x 1 NextInstruction

[0x09] PERIPH_DH
x 0 IncrementPC DataBusPeripheral WriteDH
x 1 NextInstruction

[0x0a] INCR_C
x 0 IncrementPC IncrementC
x 1 NextInstruction

[0x0b] DECR_C
x 0 IncrementPC DecrementC
x 1 NextInstruction

[0x0c] INCR_D
x 0 IncrementPC IncrementD
x 1 NextInstruction

[0x0d] DECR_D
x 0 IncrementPC DecrementD
x 1 NextInstruction

[0x10] ST @addr $data
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to data byte
x 3 AddrBusPC WriteTD IncrementPC
x 4 AddrBusTA DataBusTD WriteRAM
x 5 NextInstruction

[0x11] ST_CH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA DataBusCH WriteRAM
x 4 NextInstruction

[0x12] ST_CL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA DataBusCL WriteRAM
x 4 NextInstruction

[0x13] ST_DH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA DataBusDH WriteRAM
x 4 NextInstruction

[0x14] ST_DL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA DataBusDL WriteRAM
x 4 NextInstruction

[0x15] ST_TD @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA DataBusTD WriteRAM
x 4 NextInstruction

[0x16] LD_AH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteAH
x 4 NextInstruction

[0x17] LD_AL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteAL
x 4 NextInstruction

[0x18] LD_BH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteBH
x 4 NextInstruction

[0x19] LD_BL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteBL
x 4 NextInstruction

[0x1a] LD_CH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteCH
x 4 NextInstruction

[0x1b] LD_CL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteCL
x 4 NextInstruction

[0x1c] LD_DH @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteDH
x 4 NextInstruction

[0x1d] LD_DL @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteDL
x 4 NextInstruction

[0x1e] LD_TD @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTAH IncrementPC
x 2 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 3 AddrBusTA WriteTD
x 4 NextInstruction

[0x20] JMP @addr
x 0 IncrementPC
# PC now points to high byte of target address
x 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
x 2 AddrBusPC WritePCL
x 3 DataBusTD WritePCH
x 4 NextInstruction

[0x21] JEQ @addr
x 0 IncrementPC
e 1 IncrementPC # skip over high @addr byte
e 2 IncrementPC # skip over low @addr byte
e 3 NextInstruction
# PC now points to high byte of target address
E 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
E 2 AddrBusPC WritePCL
E 3 DataBusTD WritePCH
E 4 NextInstruction

[0x22] JNE @addr
x 0 IncrementPC
E 1 IncrementPC # skip over high @addr byte
E 2 IncrementPC # skip over low @addr byte
E 3 NextInstruction
# PC now points to high byte of target address
e 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
e 2 AddrBusPC WritePCL
e 3 DataBusTD WritePCH
e 4 NextInstruction

[0x23] JZ @addr
x 0 IncrementPC
z 1 IncrementPC # skip over high @addr byte
z 2 IncrementPC # skip over low @addr byte
z 3 NextInstruction
# PC now points to high byte of target address
Z 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
Z 2 AddrBusPC WritePCL
Z 3 DataBusTD WritePCH
Z 4 NextInstruction

[0x24] JNZ @addr
x 0 IncrementPC
Z 1 IncrementPC # skip over high @addr byte
Z 2 IncrementPC # skip over low @addr byte
Z 3 NextInstruction
# PC now points to high byte of target address
z 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
z 2 AddrBusPC WritePCL
z 3 DataBusTD WritePCH
z 4 NextInstruction

[0x25] JO @addr
x 0 IncrementPC
o 1 IncrementPC # skip over high @addr byte
o 2 IncrementPC # skip over low @addr byte
o 3 NextInstruction
# PC now points to high byte of target address
O 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
O 2 AddrBusPC WritePCL
O 3 DataBusTD WritePCH
O 4 NextInstruction

[0x26] JNO @addr
x 0 IncrementPC
O 1 IncrementPC # skip over high @addr byte
O 2 IncrementPC # skip over low @addr byte
O 3 NextInstruction
# PC now points to high byte of target address
o 1 AddrBusPC WriteTD IncrementPC
# TD now contains high byte of target address and
# PC points to low byte of target address
o 2 AddrBusPC WritePCL
o 3 DataBusTD WritePCH
o 4 NextInstruction

[0x27] JMP_D
x 0 IncrementPC
# PC now points to next instruction
x 1 DataBusDH WritePCH
x 2 DataBusDL WritePCL
x 3 NextInstruction

[0x28] JEQ_D
x 0 IncrementPC
e 1 NextInstruction
E 1 DataBusDH WritePCH
E 2 DataBusDL WritePCL
E 3 NextInstruction

[0x29] JNE_D
x 0 IncrementPC
E 1 NextInstruction
e 1 DataBusDH WritePCH
e 2 DataBusDL WritePCL
e 3 NextInstruction

[0x2a] JZ_D
x 0 IncrementPC
z 1 NextInstruction
Z 1 DataBusDH WritePCH
Z 2 DataBusDL WritePCL
Z 3 NextInstruction

[0x2b] JNZ_D
x 0 IncrementPC
Z 1 NextInstruction
z 1 DataBusDH WritePCH
z 2 DataBusDL WritePCL
z 3 NextInstruction

[0x2c] JO_D
x 0 IncrementPC
o 1 NextInstruction
O 1 DataBusDH WritePCH
O 2 DataBusDL WritePCL
O 3 NextInstruction

[0x2d] JNO_D
x 0 IncrementPC
O 1 NextInstruction
o 1 DataBusDH WritePCH
o 2 DataBusDL WritePCL
o 3 NextInstruction

[0x30] PUSH $data
x 0 IncrementPC IncrementSP
# PC now points to data; SP points to target address
x 1 AddrBusPC WriteTD
# TD now contains the data to be written to the stack
x 2 AddrBusSP DataBusTD WriteRAM IncrementPC
# PC now points to next instruction
x 3 NextInstruction

[0x31] PUSH_CH
x 0 IncrementPC IncrementSP
# PC now points to next instruction; SP points to target address
x 1 AddrBusSP DataBusCH WriteRAM
x 2 NextInstruction

[0x32] PUSH_CL
x 0 IncrementPC IncrementSP
# PC now points to next instruction; SP points to target address
x 1 AddrBusSP DataBusCL WriteRAM
x 2 NextInstruction

[0x33] PUSH_DH
x 0 IncrementPC IncrementSP
# PC now points to next instruction; SP points to target address
x 1 AddrBusSP DataBusDH WriteRAM
x 2 NextInstruction

[0x34] PUSH_DL
x 0 IncrementPC IncrementSP
# PC now points to next instruction; SP points to target address
x 1 AddrBusSP DataBusDL WriteRAM
x 2 NextInstruction

[0x35] PEEK_AH
x 0 AddrBusSP WriteAH IncrementPC
x 1 NextInstruction

[0x36] PEEK_AL
x 0 AddrBusSP WriteAL IncrementPC
x 1 NextInstruction

[0x37] PEEK_BH
x 0 AddrBusSP WriteBH IncrementPC
x 1 NextInstruction

[0x38] PEEK_BL
x 0 AddrBusSP WriteBL IncrementPC
x 1 NextInstruction

[0x39] PEEK_CH
x 0 AddrBusSP WriteCH IncrementPC
x 1 NextInstruction

[0x3a] PEEK_CL
x 0 AddrBusSP WriteCL IncrementPC
x 1 NextInstruction

[0x3b] PEEK_DH
x 0 AddrBusSP WriteDH IncrementPC
x 1 NextInstruction

[0x3c] PEEK_DL
x 0 AddrBusSP WriteDL IncrementPC
x 1 NextInstruction

[0x3d] PEEK_TAL
x 0 AddrBusSP WriteTAL IncrementPC
x 1 NextInstruction

[0x3e] PEEK_TD
x 0 AddrBusSP WriteTD IncrementPC
x 1 NextInstruction

[0x3f] POP_AH
x 0 AddrBusSP WriteAH DecrementSP IncrementPC
x 1 NextInstruction

[0x40] POP_AL
x 0 AddrBusSP WriteAL DecrementSP IncrementPC
x 1 NextInstruction

[0x41] POP_BH
x 0 AddrBusSP WriteBH DecrementSP IncrementPC
x 1 NextInstruction

[0x42] POP_BL
x 0 AddrBusSP WriteBL DecrementSP IncrementPC
x 1 NextInstruction

[0x43] POP_CH
x 0 AddrBusSP WriteCH DecrementSP IncrementPC
x 1 NextInstruction

[0x44] POP_CL
x 0 AddrBusSP WriteCL DecrementSP IncrementPC
x 1 NextInstruction

[0x45] POP_DH
x 0 AddrBusSP WriteDH DecrementSP IncrementPC
x 1 NextInstruction

[0x46] POP_DL
x 0 AddrBusSP WriteDL DecrementSP IncrementPC
x 1 NextInstruction

[0x47] POP_TAL
x 0 AddrBusSP WriteTAL DecrementSP IncrementPC
x 1 NextInstruction

[0x48] POP_TD
x 0 AddrBusSP WriteTD DecrementSP IncrementPC
x 1 NextInstruction

[0x50] LDI_A @word
x 0 IncrementPC
x 1 AddrBusPC WriteAH IncrementPC
x 2 AddrBusPC WriteAL IncrementPC
x 3 NextInstruction

[0x51] LDI_B @word
x 0 IncrementPC
x 1 AddrBusPC WriteBH IncrementPC
x 2 AddrBusPC WriteBL IncrementPC
x 3 NextInstruction

[0x52] LDI_C @word
x 0 IncrementPC
x 1 AddrBusPC WriteCH IncrementPC
x 2 AddrBusPC WriteCL IncrementPC
x 3 NextInstruction

[0x53] LDI_D @word
x 0 IncrementPC
x 1 AddrBusPC WriteDH IncrementPC
x 2 AddrBusPC WriteDL IncrementPC
x 3 NextInstruction

[0x54] LDI_AH $byte
x 0 IncrementPC
x 1 AddrBusPC WriteAH IncrementPC
x 2 NextInstruction

[0x55] LDI_AL $byte
x 0 IncrementPC
x 1 AddrBusPC WriteAL IncrementPC
x 2 NextInstruction

[0x56] LDI_BH $byte
x 0 IncrementPC
x 1 AddrBusPC WriteBH IncrementPC
x 2 NextInstruction

[0x57] LDI_BL $byte
x 0 IncrementPC
x 1 AddrBusPC WriteBL IncrementPC
x 2 NextInstruction

[0x58] LDI_CH $byte
x 0 IncrementPC
x 1 AddrBusPC WriteCH IncrementPC
x 2 NextInstruction

[0x59] LDI_CL $byte
x 0 IncrementPC
x 1 AddrBusPC WriteCL IncrementPC
x 2 NextInstruction

[0x5a] LDI_DH $byte
x 0 IncrementPC
x 1 AddrBusPC WriteDH IncrementPC
x 2 NextInstruction

[0x5b] LDI_DL $byte
x 0 IncrementPC
x 1 AddrBusPC WriteDL IncrementPC
x 2 NextInstruction

[0x5c] LDI_TAL $byte
x 0 IncrementPC
x 1 AddrBusPC WriteTAL IncrementPC
x 2 NextInstruction

[0x5d] LDI_TD $byte
x 0 IncrementPC
x 1 AddrBusPC WriteTD IncrementPC
x 2 NextInstruction

[0x5e] LDA_A_BH
x 0 IncrementPC AddrBusA WriteBH
x 1 NextInstruction

[0x5f] LDA_A_BL
x 0 IncrementPC AddrBusA WriteBL
x 1 NextInstruction

[0x60] LDA_A_CH
x 0 IncrementPC AddrBusA WriteCH
x 1 NextInstruction

[0x61] LDA_A_CL
x 0 IncrementPC AddrBusA WriteCL
x 1 NextInstruction

[0x62] LDA_A_DH
x 0 IncrementPC AddrBusA WriteDH
x 1 NextInstruction

[0x63] LDA_A_DL
x 0 IncrementPC AddrBusA WriteDL
x 1 NextInstruction

[0x64] LDA_A_TAL
x 0 IncrementPC AddrBusA WriteTAL
x 1 NextInstruction

[0x65] LDA_A_TD
x 0 IncrementPC AddrBusA WriteTD
x 1 NextInstruction

[0x66] LDA_B_AH
x 0 IncrementPC AddrBusB WriteAH
x 1 NextInstruction

[0x67] LDA_B_AL
x 0 IncrementPC AddrBusB WriteAL
x 1 NextInstruction

[0x68] LDA_B_CH
x 0 IncrementPC AddrBusB WriteCH
x 1 NextInstruction

[0x69] LDA_B_CL
x 0 IncrementPC AddrBusB WriteCL
x 1 NextInstruction

[0x6a] LDA_B_DH
x 0 IncrementPC AddrBusB WriteDH
x 1 NextInstruction

[0x6b] LDA_B_DL
x 0 IncrementPC AddrBusB WriteDL
x 1 NextInstruction

[0x6c] LDA_B_TAL
x 0 IncrementPC AddrBusB WriteTAL
x 1 NextInstruction

[0x6d] LDA_B_TD
x 0 IncrementPC AddrBusB WriteTD
x 1 NextInstruction

[0x6e] LDA_C_AH
x 0 IncrementPC AddrBusC WriteAH
x 1 NextInstruction

[0x6f] LDA_C_AL
x 0 IncrementPC AddrBusC WriteAL
x 1 NextInstruction

[0x70] LDA_C_BH
x 0 IncrementPC AddrBusC WriteBH
x 1 NextInstruction

[0x71] LDA_C_BL
x 0 IncrementPC AddrBusC WriteBL
x 1 NextInstruction

[0x72] LDA_C_TAL
x 0 IncrementPC AddrBusC WriteTAL
x 1 NextInstruction

[0x73] LDA_C_TD
x 0 IncrementPC AddrBusC WriteTD
x 1 NextInstruction

[0x74] LDA_D_AH
x 0 IncrementPC AddrBusD WriteAH
x 1 NextInstruction

[0x75] LDA_D_AL
x 0 IncrementPC AddrBusD WriteAL
x 1 NextInstruction

[0x76] LDA_D_BH
x 0 IncrementPC AddrBusD WriteBH
x 1 NextInstruction

[0x77] LDA_D_BL
x 0 IncrementPC AddrBusD WriteBL
x 1 NextInstruction

[0x78] LDA_D_TAL
x 0 IncrementPC AddrBusD WriteTAL
x 1 NextInstruction

[0x79] LDA_D_TD
x 0 IncrementPC AddrBusD WriteTD
x 1 NextInstruction

[0x7a] STA_A_CH
x 0 IncrementPC AddrBusA DataBusCH WriteRAM
x 1 NextInstruction

[0x7b] STA_A_CL
x 0 IncrementPC AddrBusA DataBusCL WriteRAM
x 1 NextInstruction

[0x7c] STA_A_DH
x 0 IncrementPC AddrBusA DataBusDH WriteRAM
x 1 NextInstruction

[0x7d] STA_A_DL
x 0 IncrementPC AddrBusA DataBusDL WriteRAM
x 1 NextInstruction

[0x7e] STA_A_TAL
x 0 IncrementPC AddrBusA DataBusTAL WriteRAM
x 1 NextInstruction

[0x7f] STA_A_TD
x 0 IncrementPC AddrBusA DataBusTD WriteRAM
x 1 NextInstruction

[0x80] STA_B_CH
x 0 IncrementPC AddrBusB DataBusCH WriteRAM
x 1 NextInstruction

[0x81] STA_B_CL
x 0 IncrementPC AddrBusB DataBusCL WriteRAM
x 1 NextInstruction

[0x82] STA_B_DH
x 0 IncrementPC AddrBusB DataBusDH WriteRAM
x 1 NextInstruction

[0x83] STA_B_DL
x 0 IncrementPC AddrBusB DataBusDL WriteRAM
x 1 NextInstruction

[0x84] STA_B_TAL
x 0 IncrementPC AddrBusB DataBusTAL WriteRAM
x 1 NextInstruction

[0x85] STA_B_TD
x 0 IncrementPC AddrBusB DataBusTD WriteRAM
x 1 NextInstruction

[0x86] STA_C_DH
x 0 IncrementPC DataBusCH WriteTAH
x 1 DataBusCL WriteTAL
x 2 AddrBusTA DataBusDH WriteRAM
x 3 NextInstruction

[0x87] STA_C_DL
x 0 IncrementPC DataBusCH WriteTAH
x 1 DataBusCL WriteTAL
x 2 AddrBusTA DataBusDL WriteRAM
x 3 NextInstruction

[0x88] STA_C_TD
x 0 IncrementPC DataBusCH WriteTAH
x 1 DataBusCL WriteTAL
x 2 AddrBusTA DataBusTD WriteRAM
x 3 NextInstruction

[0x89] STA_D_CH
x 0 IncrementPC DataBusDH WriteTAH
x 1 DataBusDL WriteTAL
x 2 AddrBusTA DataBusCH WriteRAM
x 3 NextInstruction

[0x8a] STA_D_CL
x 0 IncrementPC DataBusDH WriteTAH
x 1 DataBusDL WriteTAL
x 2 AddrBusTA DataBusCL WriteRAM
x 3 NextInstruction

[0x8b] STA_D_TD
x 0 IncrementPC DataBusDH WriteTAH
x 1 DataBusDL WriteTAL
x 2 AddrBusTA DataBusTD WriteRAM
x 3 NextInstruction

[0x90] ALUOP_FLAGS $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteStatus
x 3 NextInstruction

[0x91] ALUOP_PUSH $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC IncrementSP
# PC now points to next instruction
x 2 DataBusALU AddrBusSP WriteRAM WriteStatus
x 3 NextInstruction

[0x92] ALUOP_ADDR $op @addr
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to high byte of target address
x 2 AddrBusPC WriteTAH IncrementPC
x 3 AddrBusPC WriteTAL IncrementPC
# PC now points to next instruction
x 4 DataBusALU AddrBusTA WriteRAM WriteStatus
x 5 NextInstruction

[0x93] ALUOP_ADDR_A $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU AddrBusA WriteRAM WriteStatus
x 3 NextInstruction

[0x94] ALUOP_ADDR_B $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU AddrBusB WriteRAM WriteStatus
x 3 NextInstruction

[0x95] ALUOP_ADDR_C $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU AddrBusC WriteRAM WriteStatus
x 3 NextInstruction

[0x96] ALUOP_ADDR_D $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU AddrBusD WriteRAM WriteStatus
x 3 NextInstruction

[0x97] ALUOP_AH $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteAH WriteStatus
x 3 NextInstruction

[0x98] ALUOP_AL $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteAL WriteStatus
x 3 NextInstruction

[0x99] ALUOP_BH $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteBH WriteStatus
x 3 NextInstruction

[0x9a] ALUOP_BL $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteBL WriteStatus
x 3 NextInstruction

[0x9b] ALUOP_CH $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteCH WriteStatus
x 3 NextInstruction

[0x9c] ALUOP_CL $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteCL WriteStatus
x 3 NextInstruction

[0x9d] ALUOP_DH $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteDH WriteStatus
x 3 NextInstruction

[0x9e] ALUOP_DL $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteDL WriteStatus
x 3 NextInstruction

[0x9f] ALUOP_TAL $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteTAL WriteStatus
x 3 NextInstruction

[0xa0] ALUOP_TD $op
x 0 IncrementPC
# PC now points to $op
x 1 AddrBusPC WriteALUop IncrementPC
# PC now points to next instruction
x 2 DataBusALU WriteTD WriteStatus
x 3 NextInstruction

[0xb0] MOV_CH_AH
x 0 IncrementPC DataBusCH WriteAH
x 1 NextInstruction

[0xb1] MOV_CH_AL
x 0 IncrementPC DataBusCH WriteAL
x 1 NextInstruction

[0xb2] MOV_CH_BH
x 0 IncrementPC DataBusCH WriteBH
x 1 NextInstruction

[0xb3] MOV_CH_BL
x 0 IncrementPC DataBusCH WriteBL
x 1 NextInstruction

[0xb4] MOV_CH_TAL
x 0 IncrementPC DataBusCH WriteTAL
x 1 NextInstruction

[0xb5] MOV_CH_TD
x 0 IncrementPC DataBusCH WriteTD
x 1 NextInstruction

[0xb6] MOV_CL_AH
x 0 IncrementPC DataBusCL WriteAH
x 1 NextInstruction

[0xb7] MOV_CL_AL
x 0 IncrementPC DataBusCL WriteAL
x 1 NextInstruction

[0xb8] MOV_CL_BH
x 0 IncrementPC DataBusCL WriteBH
x 1 NextInstruction

[0xb9] MOV_CL_BL
x 0 IncrementPC DataBusCL WriteBL
x 1 NextInstruction

[0xba] MOV_CL_TAL
x 0 IncrementPC DataBusCL WriteTAL
x 1 NextInstruction

[0xbb] MOV_CL_TD
x 0 IncrementPC DataBusCL WriteTD
x 1 NextInstruction

[0xbc] MOV_DH_AH
x 0 IncrementPC DataBusDH WriteAH
x 1 NextInstruction

[0xbd] MOV_DH_AL
x 0 IncrementPC DataBusDH WriteAL
x 1 NextInstruction

[0xbe] MOV_DH_BH
x 0 IncrementPC DataBusDH WriteBH
x 1 NextInstruction

[0xbf] MOV_DH_BL
x 0 IncrementPC DataBusDH WriteBL
x 1 NextInstruction

[0xc0] MOV_DH_TAL
x 0 IncrementPC DataBusDH WriteTAL
x 1 NextInstruction

[0xc1] MOV_DH_TD
x 0 IncrementPC DataBusDH WriteTD
x 1 NextInstruction

[0xc2] MOV_DL_AH
x 0 IncrementPC DataBusDL WriteAH
x 1 NextInstruction

[0xc3] MOV_DL_AL
x 0 IncrementPC DataBusDL WriteAL
x 1 NextInstruction

[0xc4] MOV_DL_BH
x 0 IncrementPC DataBusDL WriteBH
x 1 NextInstruction

[0xc5] MOV_DL_BL
x 0 IncrementPC DataBusDL WriteBL
x 1 NextInstruction

[0xc6] MOV_DL_TAL
x 0 IncrementPC DataBusDL WriteTAL
x 1 NextInstruction

[0xc7] MOV_DL_TD
x 0 IncrementPC DataBusDL WriteTD
x 1 NextInstruction

[0xff] HLT
x 0 NextInstruction
