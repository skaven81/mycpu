# (CTLSIG) default ROMid bitmask - signals should have names no longer
#                                  than six characters so they match
#                                  logic analyzer labels

# Program counter read select
# 0: do nothing
# 1: Put PC on address bus
# 2: Put PC-low on data bus
# 3: Put PC-high on data bus
(PCRSEL) 0 0 0x03

# Program counter write select
# 0: do nothing
# 1: increment PC
# 2: Load PC-low from data bus
# 3: Load PC-high from data bus
(PCWSEL) 0 1 0x0c

# Instruction & Sequence
(/NEWOP) 1 0 0x08 # write to opcode register and reset the sequence counter on the next clock
(/WSTAT) 1 0 0x10 # write to status register on the next clock

# RAM
(/WRAM)  1 0 0x20 # write to RAM on the next clock

# Transfer register write select
# 0: do nothing
# 1: write to TD
# 2: write to TAL
# 3: write to TAH
(TWSEL)  0 0 0xc0

# Transfer register read select
(/TRADR) 1 1 0x01 # put TAL+TAH on the address bus
(/TRDTA) 1 1 0x02 # put TD on the data bus
(/TALDT) 1 1 0x40 # put TAL on the data bus

# Stack pointer read select
(/SPADR) 1 0 0x04 # Put SP on the address bus

# Stack pointer increment/decrement
# 0: do nothing
# 1: do nothing
# 2: increment
# 3: decrement
(SPSEL)  0 1 0x30

# Register A read select
# 0: do nothing
# 1: put A on address bus
# 2: put A-low on ALU-A bus
# 3: put A-high on ALU-A bus
(ARSEL)  0 2 0x03

# Register A write select
# 0: do nothing
# 1: do nothing
# 2: load A-low from data bus
# 3: load A-high from data bus
(AWSEL)  0 2 0x0c

# Register B read select
# 0: do nothing
# 1: put B on address bus
# 2: put B-low on BLU-B bus
# 3: put B-high on BLU-B bus
(BRSEL)  0 2 0x30

# Register B write select
# 0: do nothing
# 1: do nothing
# 2: load B-low from data bus
# 3: load B-high from data bus
(BWSEL)  0 2 0xc0

# ALU operation (5 bits)
(ALUOP)  0 3 0x1f
# ALU to data bus
(/ALUDT) 1 1 0x80


